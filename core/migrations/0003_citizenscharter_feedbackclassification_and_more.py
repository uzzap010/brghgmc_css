# Generated by Django 5.1.6 on 2025-03-04 00:47

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_feedback'),
    ]

    operations = [
        migrations.CreateModel(
            name='CitizensCharter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charter_awareness', models.CharField(choices=[('seen', 'Alam at nakita ang CC'), ('heard_not_seen', 'Alam ngunit hindi nakita ang CC'), ('heard_not_seen_2', 'Nalaman lang ang CC nang makita'), ('not_aware', 'Hindi alam ang CC')], max_length=20)),
                ('visibility_rating', models.CharField(blank=True, choices=[('ibang_tanggapan', 'Ibang tanggapan'), ('medyo_madaling_makita', 'Medyo madaling makita'), ('mahirap_makita', 'Mahirap makita'), ('hindi_makita', 'Hindi makita'), ('hindi_naangkop', 'Hindi Naangkop')], max_length=25, null=True)),
                ('helpfulness_rating', models.CharField(blank=True, choices=[('ibang_tanggapan', 'Ibang tanggapan'), ('medyo_madaling_makita', 'Medyo madaling makita'), ('mahirap_makita', 'Mahirap makita'), ('hindi_makita', 'Hindi makita'), ('hindi_naangkop', 'Hindi Naangkop')], max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('concerns', models.TextField(blank=True, null=True)),
                ('timeliness_positive', models.BooleanField(default=False)),
                ('timeliness_negative', models.BooleanField(default=False)),
                ('timeliness_suggestion', models.BooleanField(default=False)),
                ('manpower_positive', models.BooleanField(default=False)),
                ('manpower_negative', models.BooleanField(default=False)),
                ('manpower_suggestion', models.BooleanField(default=False)),
                ('attitude_positive', models.BooleanField(default=False)),
                ('attitude_negative', models.BooleanField(default=False)),
                ('attitude_suggestion', models.BooleanField(default=False)),
                ('queueing_positive', models.BooleanField(default=False)),
                ('queueing_negative', models.BooleanField(default=False)),
                ('queueing_suggestion', models.BooleanField(default=False)),
                ('process_positive', models.BooleanField(default=False)),
                ('process_negative', models.BooleanField(default=False)),
                ('process_suggestion', models.BooleanField(default=False)),
                ('communication_positive', models.BooleanField(default=False)),
                ('communication_negative', models.BooleanField(default=False)),
                ('communication_suggestion', models.BooleanField(default=False)),
                ('cleanliness_positive', models.BooleanField(default=False)),
                ('cleanliness_negative', models.BooleanField(default=False)),
                ('cleanliness_suggestion', models.BooleanField(default=False)),
                ('facilities_positive', models.BooleanField(default=False)),
                ('facilities_negative', models.BooleanField(default=False)),
                ('facilities_suggestion', models.BooleanField(default=False)),
                ('environment_positive', models.BooleanField(default=False)),
                ('environment_negative', models.BooleanField(default=False)),
                ('environment_suggestion', models.BooleanField(default=False)),
                ('others_positive', models.BooleanField(default=False)),
                ('others_negative', models.BooleanField(default=False)),
                ('others_suggestion', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OverallFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equal_treatment', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('satisfaction', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_answer', models.CharField(choices=[('pasyente', 'Pasyente'), ('kasama', 'Kasama ng Pasyente'), ('negosyo', 'Transaksyon sa Negosyo'), ('empleyado', 'Empleyado')], max_length=20)),
                ('gender', models.CharField(choices=[('babae', 'Babae'), ('lalaki', 'Lalaki')], max_length=10)),
                ('religion', models.CharField(choices=[('kristiyano', 'Kristiyano'), ('islam', 'Islam'), ('wala', 'Wala'), ('katoliko', 'Katoliko Romano'), ('ibang_relihiyon', 'Ibang Relihiyon')], max_length=20)),
                ('education', models.CharField(choices=[('elementary', 'Elementary'), ('secondary', 'Sekondarya'), ('vocational', 'Bokasyonal'), ('college', 'Kolehiyo'), ('postgrad', 'Postgraduates'), ('no_formal_edu', 'Walang pormal na edukasyon')], max_length=20)),
                ('visit_frequency', models.CharField(choices=[('once', '0-1 beses sa isang taon'), ('four', '4-6 beses sa isang taon'), ('seven', '7-11 beses sa isang taon'), ('twelve', '12+ beses sa isang taon')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Respondent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_compliance', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('information_accessibility', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('transaction_time', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('condition_explanation', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('procedure_explanation', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('treatment_options', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('respondent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_rating', to='core.respondent')),
            ],
        ),
        migrations.CreateModel(
            name='StaffRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('nurse_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('midwife_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('security_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('radiology_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('pharmacy_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('lab_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('admitting_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('records_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('billing_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('cashier_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('social_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('food_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('janitor_rating', models.IntegerField(choices=[(5, 'Lubos na Sumasang-ayon'), (4, 'Sumasang-ayon'), (3, 'Medyo Sumasang-ayon'), (2, 'Hindi Sumasang-ayon'), (1, 'Lubos na Hindi Sumasang-ayon')])),
                ('respondent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_rating', to='core.respondent')),
            ],
        ),
        migrations.DeleteModel(
            name='Feedback',
        ),
        migrations.AddField(
            model_name='personalinformation',
            name='respondent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_info', to='core.respondent'),
        ),
        migrations.AddField(
            model_name='overallfeedback',
            name='respondent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='overall_feedback', to='core.respondent'),
        ),
        migrations.AddField(
            model_name='feedbackclassification',
            name='respondent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_classification', to='core.respondent'),
        ),
        migrations.AddField(
            model_name='citizenscharter',
            name='respondent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='charter_info', to='core.respondent'),
        ),
    ]
